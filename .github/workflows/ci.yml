name: Tests

on:
  push:
    # branches:
    # - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: npm install
    - run: npm run format-check
    - run: npm test
  integration-test:
    name: Integrate Swift ${{ matrix.swift }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        swift: ["5.6.1"]
        include:
        - os: windows-latest
          swift: "5.3"
    steps:
    - uses: actions/checkout@v3
    - run: npm install
    - run: npm run build && npm run pack-source-map
    - uses: ./
      with:
        swift-version: ${{ matrix.swift }}
    - name: Swift version
      run: swift --version | grep ${{ matrix.swift }} || exit 1
    - name: Swift directory check
      if: runner.os == 'Windows'
      run: |
        $swift=(get-command swift).Source
        write-output $swift
        ls (get-item $swift).Directory.FullName
